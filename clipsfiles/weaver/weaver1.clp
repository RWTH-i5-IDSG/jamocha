
(defrule start-dummy
  =>
  (set-strategy lex)
  (assert (layer-info (layer-name metal) (layer-order 2)))
  (assert (layer-info (layer-name poly) (layer-order 1)))
  (assert (channel (channel-bottom-left-x 0) (channel-bottom-left-y 0)   
                   (channel-top-right-x 13)  (channel-top-right-y 5)   
                   (channel-width 5) (channel-length 13)  (no-of-left-pins 0)  
                   (no-of-right-pins 0)  (no-of-top-pins 12)    (no-of-bottom-pins 12)))
  (assert (last-row  4)) ; removed 2nd value since unused
  (assert (last-col 12)) ; removed 2nd value since unused
 
  (assert (pin  (net-name 3)  (external-pin-name 1)  (pin-x 1)  (pin-y 0)  
                (pin-layer poly)  (pin-layer-constraint fixed)  (pin-channel-side bottom)
                (pin-name 35)  (external-net-name 3)))
  (assert (pin  (net-name 1)  (external-pin-name 2)  (pin-x 2)  (pin-y 0)  
                (pin-layer poly)  (pin-layer-constraint fixed)  (pin-channel-side bottom)
                (pin-name 34)    (external-net-name 1)))
  (assert (pin  (net-name 5)  (external-pin-name 3)  (pin-x 3)  (pin-y 0)  
                (pin-layer poly)  (pin-layer-constraint fixed)  (pin-channel-side bottom)
                (pin-name 33)  (external-net-name 5)))
  (assert (pin  (net-name 3)  (external-pin-name 4)  (pin-x 4)  (pin-y 0)  
                (pin-layer poly)  (pin-layer-constraint fixed)  (pin-channel-side bottom)
                (pin-name 32)  (external-net-name 3)))
  (assert (pin  (net-name 5)  (external-pin-name 5)  (pin-x 5)  (pin-y 0)  
                (pin-layer poly)  (pin-layer-constraint fixed)  (pin-channel-side bottom)
                (pin-name 31)  (external-net-name 5)))
  (assert (pin  (net-name 2)  (external-pin-name 6)  (pin-x 6)  (pin-y 0)  
                (pin-layer poly)  (pin-layer-constraint fixed)  (pin-channel-side bottom)
                (pin-name 30)  (external-net-name 2)))
  (assert (pin  (net-name 6)  (external-pin-name 7)  (pin-x 7)  (pin-y 0)  
                (pin-layer poly)  (pin-layer-constraint fixed)  (pin-channel-side bottom)
                (pin-name 29)  (external-net-name 6)))
  (assert (pin  (net-name 8)  (external-pin-name 8)  (pin-x 8)  (pin-y 0)
                (pin-layer poly)  (pin-layer-constraint fixed)  (pin-channel-side bottom)  
                (pin-name 28)  (external-net-name 8)))
  (assert (pin  (net-name 9)  (external-pin-name 9)  (pin-x 9)  (pin-y 0)  
                (pin-layer poly)  (pin-layer-constraint fixed)  (pin-channel-side bottom)  
                (pin-name 27)  (external-net-name 9)))
  (assert (pin  (net-name 8)  (external-pin-name 10)  (pin-x 10)  (pin-y 0)  
                (pin-layer poly)  (pin-layer-constraint fixed)  (pin-channel-side bottom)  
                (pin-name 26)  (external-net-name 8)))
  (assert (pin  (net-name 7)  (external-pin-name 11)  (pin-x 11)  (pin-y 0)  
                (pin-layer poly)  (pin-layer-constraint fixed)  (pin-channel-side bottom)  
                (pin-name 25)  (external-net-name 7)))
  (assert (pin  (net-name 9)  (external-pin-name 12)  (pin-x 12)  (pin-y 0)  
                (pin-layer poly)  (pin-layer-constraint fixed)  (pin-channel-side bottom)  
                (pin-name 24)  (external-net-name 9)))
  (assert (pin  (net-name 2)  (external-pin-name 13)  (pin-x 1) (pin-y 5)  
                (pin-layer poly)  (pin-layer-constraint fixed)  (pin-channel-side top)  
                (pin-name 6)  (external-net-name 2)))
  (assert (pin  (net-name 1)  (external-pin-name 14)  (pin-x 2)  (pin-y 5)  (pin-layer poly)  (pin-layer-constraint fixed)  (pin-channel-side top)  (pin-name 7)  (external-net-name 1)))
  (assert (pin  (net-name 4)  (external-pin-name 15)  (pin-x 3)  (pin-y 5)  (pin-layer poly)  (pin-layer-constraint fixed)  (pin-channel-side top)  (pin-name 8)  (external-net-name 4)))
  (assert (pin  (net-name 5)  (external-pin-name 16)  (pin-x 4)  (pin-y 5)  (pin-layer poly)  (pin-layer-constraint fixed)  (pin-channel-side top)  (pin-name 9)  (external-net-name 5)))
  (assert (pin  (net-name 1)  (external-pin-name 17)  (pin-x 5)  (pin-y 5)  (pin-layer poly)  (pin-layer-constraint fixed)  (pin-channel-side top)  (pin-name 10)  (external-net-name 1)))
  (assert (pin  (net-name 6)  (external-pin-name 18)  (pin-x 6)  (pin-y 5)  (pin-layer poly)  (pin-layer-constraint fixed)  (pin-channel-side top)  (pin-name 11)  (external-net-name 6)))
  (assert (pin  (net-name 7)  (external-pin-name 19)  (pin-x 7)  (pin-y 5)  (pin-layer poly)  (pin-layer-constraint fixed)  (pin-channel-side top)  (pin-name 12)  (external-net-name 7)))
  (assert (pin  (net-name 10)  (external-pin-name 20)  (pin-x 8)  (pin-y 5)  (pin-layer poly)  (pin-layer-constraint fixed)  (pin-channel-side top)  (pin-name 13)  (external-net-name 10)))
  (assert (pin  (net-name 4)  (external-pin-name 21)  (pin-x 9)  (pin-y 5)  (pin-layer poly)  (pin-layer-constraint fixed)  (pin-channel-side top)  (pin-name 14)  (external-net-name 4)))
  (assert (pin  (net-name 9)  (external-pin-name 22)  (pin-x 10)  (pin-y 5)  (pin-layer poly)  (pin-layer-constraint fixed)  (pin-channel-side top)  (pin-name 15)  (external-net-name 9)))
  (assert (pin  (net-name 10)  (external-pin-name 23)  (pin-x 11)  (pin-y 5)  (pin-layer poly)  (pin-layer-constraint fixed)  (pin-channel-side top)  (pin-name 16)  (external-net-name 10)))
  (assert (pin  (net-name 10)  (external-pin-name 24)  (pin-x 12)  (pin-y 5)  (pin-layer poly)  (pin-layer-constraint fixed)  (pin-channel-side top)  (pin-name 17)  (external-net-name 10)))
  (assert (net  (net-name 3)  (parent-name 3)  (net-no-of-pins 2)  (net-left-x 1)  (net-left-y 0)  (net-right-x 4)  (net-right-y 0)  (no-of-left-pins 0)  (no-of-right-pins 0)  
          (no-of-top-pins 0)  (no-of-bottom-pins 2)  (left-most-pin-name 35)  (right-most-pin-name 32)  (bottom-most-pin-name 35)  (top-most-pin-name 35)  (external-net-name 3)))
  (assert (to-be-routed  (net-name 3)  (no-of-attached-pins 1)))
  (assert (included  3  35))
  (assert (net  (net-name 1)  (parent-name 1)  (net-no-of-pins 3)  (net-left-x 2)  (net-left-y 0)  (net-right-x 5)  (net-right-y 5)  (no-of-left-pins 0)  (no-of-right-pins 0)  
     (no-of-top-pins 2)  (no-of-bottom-pins 1)  (left-most-pin-name 34)  (right-most-pin-name 10)  (bottom-most-pin-name 34)  (top-most-pin-name 7)  (external-net-name 1)))
  (assert (to-be-routed  (net-name 1)  (no-of-attached-pins 1)))
  (assert (included  1  34))
  (assert (net  (net-name 5)  (parent-name 5)  (net-no-of-pins 3)  (net-left-x 3)  (net-left-y 0)  (net-right-x 5)  (net-right-y 5)  (no-of-left-pins 0)  (no-of-right-pins 0) 
     (no-of-top-pins 1)  (no-of-bottom-pins 2)  (left-most-pin-name 33)  (right-most-pin-name 31)  (bottom-most-pin-name 33)  (top-most-pin-name 9)  (external-net-name 5)))
  (assert (to-be-routed  (net-name 5)  (no-of-attached-pins 1)))
  (assert (included  5  33))
  (assert (net  (net-name 2)  (parent-name 2)  (net-no-of-pins 2)  (net-left-x 1)  (net-left-y 0)  (net-right-x 6)  (net-right-y 5)  (no-of-left-pins 0)  (no-of-right-pins 0) 
     (no-of-top-pins 1)  (no-of-bottom-pins 1)  (left-most-pin-name 6)  (right-most-pin-name 30)  (bottom-most-pin-name 30)  (top-most-pin-name 6)  (external-net-name 2)))
  (assert (to-be-routed  (net-name 2)  (no-of-attached-pins 1)))
  (assert (included  2  30))
  (assert (net  (net-name 6)  (parent-name 6)  (net-no-of-pins 2)  (net-left-x 6)  (net-left-y 0)  (net-right-x 7)  (net-right-y 5)  (no-of-left-pins 0)  (no-of-right-pins 0) 
     (no-of-top-pins 1)  (no-of-bottom-pins 1)  (left-most-pin-name 11)  (right-most-pin-name 29)  (bottom-most-pin-name 29)  (top-most-pin-name 11)  (external-net-name 6)))
  (assert (to-be-routed  (net-name 6)  (no-of-attached-pins 1)))
  (assert (included  6  29))
  (assert (net  (net-name 8)  (parent-name 8)  (net-no-of-pins 2)  (net-left-x 8)  (net-left-y 0)  (net-right-x 10)  (net-right-y 0)  (no-of-left-pins 0)  (no-of-right-pins 0) 
     (no-of-top-pins 0)  (no-of-bottom-pins 2)  (left-most-pin-name 28)  (right-most-pin-name 26)  (bottom-most-pin-name 28)  (top-most-pin-name 28)  (external-net-name 8)))
  (assert (to-be-routed  (net-name 8)  (no-of-attached-pins 1)))
  (assert (included  8  28))
  (assert (net  (net-name 9)  (parent-name 9)  (net-no-of-pins 3)  (net-left-x 9)  (net-left-y 0)  (net-right-x 12)  (net-right-y 5)  (no-of-left-pins 0)  (no-of-right-pins 0)  
     (no-of-top-pins 1)  (no-of-bottom-pins 2)  (left-most-pin-name 27)  (right-most-pin-name 24)  (bottom-most-pin-name 27)  (top-most-pin-name 15)  (external-net-name 9)))
  (assert (to-be-routed  (net-name 9)  (no-of-attached-pins 1)))
  (assert (included  9  27))
  (assert (net  (net-name 7)  (parent-name 7)  (net-no-of-pins 2)  (net-left-x 7)  (net-left-y 0)  (net-right-x 11)  (net-right-y 5)  (no-of-left-pins 0)  (no-of-right-pins 0)  
     (no-of-top-pins 1)  (no-of-bottom-pins 1)  (left-most-pin-name 12)  (right-most-pin-name 25)  (bottom-most-pin-name 25)  (top-most-pin-name 12)  (external-net-name 7)))
  (assert (to-be-routed  (net-name 7)  (no-of-attached-pins 1)))
  (assert (included  7  25))
  (assert (net  (net-name 4)  (parent-name 4)  (net-no-of-pins 2)  (net-left-x 3)  (net-left-y 5)  (net-right-x 9)  (net-right-y 5)  (no-of-left-pins 0)  (no-of-right-pins 0)  
     (no-of-top-pins 2)  (no-of-bottom-pins 0)  (left-most-pin-name 8)  (right-most-pin-name 14)  (bottom-most-pin-name 8)  (top-most-pin-name 8)  (external-net-name 4)))
  (assert (to-be-routed  (net-name 4)  (no-of-attached-pins 1)))
  (assert (included  4  8))
  (assert (net  (net-name 10)  (parent-name 10)  (net-no-of-pins 3)  (net-left-x 8)  (net-left-y 5)  (net-right-x 12)  (net-right-y 5)  (no-of-left-pins 0)  (no-of-right-pins 0)  
     (no-of-top-pins 3)  (no-of-bottom-pins 0)  (left-most-pin-name 13)  (right-most-pin-name 17)  (bottom-most-pin-name 13)  (top-most-pin-name 13)  (external-net-name 10)))
  (assert (to-be-routed  (net-name 10)  (no-of-attached-pins 1)))
  (assert (included  10  13))
  (assert (vertical-layer  poly  24))
  (assert (horizontal-layer  metal  0))
  (assert (congestion  (coordinate 0)  (direction row)  (no-of-nets 12)  (como -1)))
  (assert (congestion  (coordinate 1)  (direction row)  (no-of-nets 12)  (como 0)))
  (assert (congestion  (coordinate 2)  (direction row)  (no-of-nets 6)  (como 1)))
  (assert (congestion  (coordinate 3)  (direction row)  (no-of-nets 6)  (como 2)))
  (assert (congestion  (coordinate 4)  (direction row)  (no-of-nets 12)  (como 3)))
  (assert (congestion  (coordinate 5)  (direction row)  (no-of-nets 12)  (como 4)))
  (assert (congestion  (coordinate 0)  (direction col)  (no-of-nets 0)  (como -1)))
  (assert (congestion  (coordinate 1)  (direction col)  (no-of-nets 2)  (como 0)))
  (assert (congestion  (coordinate 2)  (direction col)  (no-of-nets 3)  (como 1)))
  (assert (congestion  (coordinate 3)  (direction col)  (no-of-nets 5)  (como 2)))
  (assert (congestion  (coordinate 4)  (direction col)  (no-of-nets 5)  (como 3)))
  (assert (congestion  (coordinate 5)  (direction col)  (no-of-nets 4)  (como 4)))
  (assert (congestion  (coordinate 6)  (direction col)  (no-of-nets 3)  (como 5)))
  (assert (congestion  (coordinate 7)  (direction col)  (no-of-nets 3)  (como 6)))
  (assert (congestion  (coordinate 8)  (direction col)  (no-of-nets 4)  (como 7)))
  (assert (congestion  (coordinate 9)  (direction col)  (no-of-nets 5)  (como 8)))
  (assert (congestion  (coordinate 10)  (direction col)  (no-of-nets 4)  (como 9)))
  (assert (congestion  (coordinate 11)  (direction col)  (no-of-nets 3)  (como 10)))
  (assert (congestion  (coordinate 12)  (direction col)  (no-of-nets 2)  (como 11)))
  (assert (congestion  (coordinate 13)  (direction col)  (no-of-nets 0)  (como 12)))
  (assert (horizontal  (compo 3)  (com 2)  (min 1)  (max 12)  (commo 1)  (layer metal)))
  (assert (horizontal  (compo 3)  (com 2)  (min 1)  (max 12)  (commo 1)  (layer poly)))
  (assert (horizontal  (compo 4)  (com 3)  (min 1)  (max 12)  (commo 2)  (layer metal)))
  (assert (horizontal  (compo 4)  (com 3)  (min 1)  (max 12)  (commo 2)  (layer poly)))
  (assert (vertical  (compo 3)  (com 2)  (min 1)  (max 4)  (commo 1)  (layer metal)))
  (assert (vertical  (compo 3)  (com 2)  (min 1)  (max 4)  (commo 1)  (layer poly)  (min-net 1)  (max-net 1)))
  (assert (vertical  (compo 4)  (com 3)  (min 1)  (max 4)  (commo 2)  (layer metal)))
  (assert (vertical  (compo 4)  (com 3)  (min 1)  (max 4)  (commo 2)  (layer poly)  (min-net 5)  (max-net 4)))
  (assert (vertical  (compo 5)  (com 4)  (min 1)  (max 4)  (commo 3)  (layer metal)))
  (assert (vertical  (compo 5)  (com 4)  (min 1)  (max 4)  (commo 3)  (layer poly)  (min-net 3)  (max-net 5)))
  (assert (vertical  (compo 6)  (com 5)  (min 1)  (max 4)  (commo 4)  (layer metal)))
  (assert (vertical  (compo 6)  (com 5)  (min 1)  (max 4)  (commo 4)  (layer poly)  (min-net 5)  (max-net 1)))
  (assert (vertical  (compo 7)  (com 6)  (min 1)  (max 4)  (commo 5)  (layer metal)))
  (assert (vertical  (compo 7)  (com 6)  (min 1)  (max 4)  (commo 5)  (layer poly)  (min-net 2)  (max-net 6)))
  (assert (vertical  (compo 8)  (com 7)  (min 1)  (max 4)  (commo 6)  (layer metal)))
  (assert (vertical  (compo 8)  (com 7)  (min 1)  (max 4)  (commo 6)  (layer poly)  (min-net 6)  (max-net 7)))
  (assert (vertical  (compo 9)  (com 8)  (min 1)  (max 4)  (commo 7)  (layer metal)))
  (assert (vertical  (compo 9)  (com 8)  (min 1)  (max 4)  (commo 7)  (layer poly)  (min-net 8)  (max-net 10)))
  (assert (vertical  (compo 10)  (com 9)  (min 1)  (max 4)  (commo 8)  (layer metal)))
  (assert (vertical  (compo 10)  (com 9)  (min 1)  (max 4)  (commo 8)  (layer poly)  (min-net 9)  (max-net 4)))
  (assert (vertical  (compo 11)  (com 10)  (min 1)  (max 4)  (commo 9)  (layer metal)))
  (assert (vertical  (compo 11)  (com 10)  (min 1)  (max 4)  (commo 9)  (layer poly)  (min-net 8)  (max-net 9)))
  (assert (vertical  (compo 12)  (com 11)  (min 1)  (max 4)  (commo 10)  (layer metal)))
  (assert (vertical  (compo 12)  (com 11)  (min 1)  (max 4)  (commo 10)  (layer poly)  (min-net 7)  (max-net 10)))
  (assert (horizontal  (compo 2)  (com 1)  (min 1)  (max 12)  (commo 0)  (layer metal)))
  (assert (horizontal  (compo 5)  (com 4)  (min 11)  (max 12)  (commo 3)  (layer poly)  (min-net 10)  (max-net 10)))
  (assert (horizontal  (compo 5)  (com 4)  (min 1)  (max 12)  (commo 3)  (layer metal)))
  (assert (vertical  (compo 2)  (com 1)  (min 1)  (max 4)  (commo 0)  (layer poly)  (min-net 3)  (max-net 2)))
  (assert (vertical  (compo 2)  (com 1)  (min 1)  (max 4)  (commo 0)  (layer metal)))
  (assert (vertical  (compo 13)  (com 12)  (min 1)  (max 4)  (commo 11)  (layer poly)  (min-net 9)  (max-net 10)))
  (assert (vertical  (compo 13)  (com 12)  (min 1)  (max 4)  (commo 11)  (layer metal)))
  (assert (vertical  (net-name 3)  (compo 2)  (com 1)  (min 0)  (max 1)  (commo 0)  (layer poly)  (pin-name 35)))
  (assert (ff  (net-name 3)  (grid-layer poly)  (grid-x 1)  (grid-y 1)  (came-from south)  (pin-name 35)))
  (assert (vertical  (net-name 1)  (compo 3)  (com 2)  (min 0)  (max 1)  (commo 1)  (layer poly)  (pin-name 34)))
  (assert (ff  (net-name 1)  (grid-layer poly)  (grid-x 2)  (grid-y 1)  (came-from south)  (pin-name 34)))
  (assert (vertical  (net-name 5)  (compo 4)  (com 3)  (min 0)  (max 1)  (commo 2)  (layer poly)  (pin-name 33)))
  (assert (ff  (net-name 5)  (grid-layer poly)  (grid-x 3)  (grid-y 1)  (came-from south)  (pin-name 33)))
  (assert (vertical  (net-name 3)  (compo 5)  (com 4)  (min 0)  (max 1)  (commo 3)  (layer poly)  (pin-name 32)))
  (assert (ff  (net-name 3)  (grid-layer poly)  (grid-x 4)  (grid-y 1)  (came-from south)  (pin-name 32)))
  (assert (vertical  (net-name 5)  (compo 6)  (com 5)  (min 0)  (max 1)  (commo 4)  (layer poly)  (pin-name 31)))
  (assert (ff  (net-name 5)  (grid-layer poly)  (grid-x 5)  (grid-y 1)  (came-from south)  (pin-name 31)))
  (assert (vertical  (net-name 2)  (compo 7)  (com 6)  (min 0)  (max 1)  (commo 5)  (layer poly)  (pin-name 30)))
  (assert (ff  (net-name 2)  (grid-layer poly)  (grid-x 6)  (grid-y 1)  (came-from south)  (pin-name 30)))
  (assert (vertical  (net-name 6)  (compo 8)  (com 7)  (min 0)  (max 1)  (commo 6)  (layer poly)  (pin-name 29)))
  (assert (ff  (net-name 6)  (grid-layer poly)  (grid-x 7)  (grid-y 1)  (came-from south)  (pin-name 29)))
  (assert (vertical  (net-name 8)  (compo 9)  (com 8)  (min 0)  (max 1)  (commo 7)  (layer poly)  (pin-name 28)))
  (assert (ff  (net-name 8)  (grid-layer poly)  (grid-x 8)  (grid-y 1)  (came-from south)  (pin-name 28)))
  (assert (vertical  (net-name 9)  (compo 10)  (com 9)  (min 0)  (max 1)  (commo 8)  (layer poly)  (pin-name 27)))
  (assert (ff  (net-name 9)  (grid-layer poly)  (grid-x 9)  (grid-y 1)  (came-from south)  (pin-name 27)))
  (assert (vertical  (net-name 8)  (compo 11)  (com 10)  (min 0)  (max 1)  (commo 9)  (layer poly)  (pin-name 26)))
  (assert (ff  (net-name 8)  (grid-layer poly)  (grid-x 10)  (grid-y 1)  (came-from south)  (pin-name 26)))
  (assert (vertical  (net-name 7)  (compo 12)  (com 11)  (min 0)  (max 1)  (commo 10)  (layer poly)  (pin-name 25)))
  (assert (ff  (net-name 7)  (grid-layer poly)  (grid-x 11)  (grid-y 1)  (came-from south)  (pin-name 25)))
  (assert (vertical  (net-name 9)  (compo 13)  (com 12)  (min 0)  (max 1)  (commo 11)  (layer poly)  (pin-name 24)))
  (assert (ff  (net-name 9)  (grid-layer poly)  (grid-x 12)  (grid-y 1)  (came-from south)  (pin-name 24)))
  (assert (vertical  (net-name 2)  (compo 2)  (com 1)  (min 4)  (max 5)  (commo 0)  (layer poly)  (pin-name 6)))
  (assert (ff  (net-name 2)  (grid-layer poly)  (grid-x 1)  (grid-y 4)  (came-from north)  (pin-name 6)))
  (assert (vertical  (net-name 1)  (compo 3)  (com 2)  (min 4)  (max 5)  (commo 1)  (layer poly)  (pin-name 7)))
  (assert (ff  (net-name 1)  (grid-layer poly)  (grid-x 2)  (grid-y 4)  (came-from north)  (pin-name 7)))
  (assert (vertical  (net-name 4)  (compo 4)  (com 3)  (min 4)  (max 5)  (commo 2)  (layer poly)  (pin-name 8)))
  (assert (ff  (net-name 4)  (grid-layer poly)  (grid-x 3)  (grid-y 4)  (came-from north)  (pin-name 8)))
  (assert (vertical  (net-name 5)  (compo 5)  (com 4)  (min 4)  (max 5)  (commo 3)  (layer poly)  (pin-name 9)))
  (assert (ff  (net-name 5)  (grid-layer poly)  (grid-x 4)  (grid-y 4)  (came-from north)  (pin-name 9)))
  (assert (vertical  (net-name 1)  (compo 6)  (com 5)  (min 4)  (max 5)  (commo 4)  (layer poly)  (pin-name 10)))
  (assert (ff  (net-name 1)  (grid-layer poly)  (grid-x 5)  (grid-y 4)  (came-from north)  (pin-name 10)))
  (assert (vertical  (net-name 6)  (compo 7)  (com 6)  (min 4)  (max 5)  (commo 5)  (layer poly)  (pin-name 11)))
  (assert (ff  (net-name 6)  (grid-layer poly)  (grid-x 6)  (grid-y 4)  (came-from north)  (pin-name 11)))
  (assert (vertical  (net-name 7)  (compo 8)  (com 7)  (min 4)  (max 5)  (commo 6)  (layer poly)  (pin-name 12)))
  (assert (ff  (net-name 7)  (grid-layer poly)  (grid-x 7)  (grid-y 4)  (came-from north)  (pin-name 12)))
  (assert (vertical  (net-name 10)  (compo 9)  (com 8)  (min 4)  (max 5)  (commo 7)  (layer poly)  (pin-name 13)))
  (assert (ff  (net-name 10)  (grid-layer poly)  (grid-x 8)  (grid-y 4)  (came-from north)  (pin-name 13)))
  (assert (vertical  (net-name 4)  (compo 10)  (com 9)  (min 4)  (max 5)  (commo 8)  (layer poly)  (pin-name 14)))
  (assert (ff  (net-name 4)  (grid-layer poly)  (grid-x 9)  (grid-y 4)  (came-from north)  (pin-name 14)))
  (assert (vertical  (net-name 9)  (compo 11)  (com 10)  (min 4)  (max 5)  (commo 9)  (layer poly)  (pin-name 15)))
  (assert (ff  (net-name 9)  (grid-layer poly)  (grid-x 10)  (grid-y 4)  (came-from north)  (pin-name 15)))
  (assert (vertical  (net-name 10)  (compo 12)  (com 11)  (min 4)  (max 5)  (commo 10)  (layer poly)  (pin-name 16)))
  (assert (ff  (net-name 10)  (grid-layer poly)  (grid-x 11)  (grid-y 4)  (came-from north)  (pin-name 16)))
  (assert (vertical  (net-name 10)  (compo 13)  (com 12)  (min 4)  (max 5)  (commo 11)  (layer poly)  (pin-name 17)))
  (assert (ff  (net-name 10)  (grid-layer poly)  (grid-x 12)  (grid-y 4)  (came-from north)  (pin-name 17)))
  (assert (horizontal-s  (net-name 3)  (top-count 0)  (com 1)  (min 1)  (max 4)  (bot-count 2)  (id 0)  (sum 2)  (difference -2)  (absolute 2)))
  (assert (vertical-s  (net-name 1)  (top-count 1)  (com 2)  (min 1)  (max 4)  (bot-count 0)  (id 1)  (sum 1)  (difference 1)  (absolute 1)))
  (assert (horizontal-s  (net-name 1)  (top-count 2)  (com 4)  (min 2)  (max 5)  (bot-count 1)  (id 2)  (sum 3)  (difference 1)  (absolute 1)))
  (assert (horizontal-s  (net-name 5)  (top-count 1)  (com 1)  (min 3)  (max 5)  (bot-count 2)  (id 3)  (sum 3)  (difference -1)  (absolute 1)))
  (assert (vertical-s  (net-name 5)  (top-count 1)  (com 4)  (min 1)  (max 4)  (bot-count 1)  (id 4)  (sum 2)  (difference 0)  (absolute 0)))
  (assert (vertical-s  (net-name 2)  (top-count 1)  (com 1)  (min 1)  (max 4)  (bot-count 1)  (id 5)  (sum 2)  (difference 0)  (absolute 0)))
  (assert (horizontal-s  (net-name 2)  (top-count 1)  (com 1)  (min 1)  (max 6)  (bot-count 1)  (id 6)  (sum 2)  (difference 0)  (absolute 0)))
  (assert (vertical-s  (net-name 6)  (top-count 1)  (com 6)  (min 1)  (max 4)  (bot-count 0)  (id 7)  (sum 1)  (difference 1)  (absolute 1)))
  (assert (horizontal-s  (net-name 6)  (top-count 1)  (com 1)  (min 6)  (max 7)  (bot-count 1)  (id 8)  (sum 2)  (difference 0)  (absolute 0)))
  (assert (horizontal-s  (net-name 8)  (top-count 0)  (com 1)  (min 8)  (max 10)  (bot-count 2)  (id 9)  (sum 2)  (difference -2)  (absolute 2)))
  (assert (horizontal-s  (net-name 9)  (top-count 1)  (com 1)  (min 9)  (max 12)  (bot-count 2)  (id 10)  (sum 3)  (difference -1)  (absolute 1)))
  (assert (vertical-s  (net-name 9)  (top-count 1)  (com 10)  (min 1)  (max 4)  (bot-count 1)  (id 11)  (sum 2)  (difference 0)  (absolute 0)))
  (assert (vertical-s  (net-name 7)  (top-count 1)  (com 7)  (min 1)  (max 4)  (bot-count 0)  (id 12)  (sum 1)  (difference 1)  (absolute 1)))
  (assert (horizontal-s  (net-name 7)  (top-count 1)  (com 1)  (min 7)  (max 11)  (bot-count 1)  (id 13)  (sum 2)  (difference 0)  (absolute 0)))
  (assert (horizontal-s  (net-name 4)  (top-count 2)  (com 4)  (min 3)  (max 9)  (bot-count 0)  (id 14)  (sum 2)  (difference 2)  (absolute 2)))
  (assert (horizontal-s  (net-name 10)  (top-count 3)  (com 4)  (min 8)  (max 12)  (bot-count 0)  (id 15)  (sum 3)  (difference 3)  (absolute 3)))
  (assert (branch-no 1000))
  (assert (context (present separate))))
