/* Generated By:JJTree: Do not edit this line. SimpleNode.java */

package org.jamocha.parser.sfp;

import org.jamocha.rete.Parameter;

public class SimpleNode implements Node {
	protected Node parent;

	protected Node[] children;

	protected int id;

	protected SFPParser parser;

	protected String name;
	
	protected String docString;

	public void setName(String n) {
		name = n;
	}

	public String getName() {
		return name;
	}

	public SimpleNode(int i) {
		id = i;
	}

	public SimpleNode(SFPParser p, int i) {
		this(i);
		parser = p;
	}

	public void jjtOpen() {
	}

	public void jjtClose() {
	}

	public void jjtSetParent(Node n) {
		parent = n;
	}

	public Node jjtGetParent() {
		return parent;
	}

	public void jjtAddChild(Node n, int i) {
		if (children == null) {
			children = new Node[i + 1];
		} else if (i >= children.length) {
			Node c[] = new Node[i + 1];
			System.arraycopy(children, 0, c, 0, children.length);
			children = c;
		}
		children[i] = n;
	}

	public Node jjtGetChild(int i) {
		return children[i];
	}

	public int jjtGetNumChildren() {
		return (children == null) ? 0 : children.length;
	}

	/* You can override these two methods in subclasses of SimpleNode to
	 customize the way the node appears when the tree is dumped.  If
	 your output uses more than one line you should override
	 toString(String), otherwise overriding toString() is probably all
	 you need to do. */

	public String toString() {
		return SFPParserTreeConstants.jjtNodeName[id];
	}

	public String toString(String prefix) {
		return prefix + toString();
	}

	/* Override this method if you want to customize how the node dumps
	 out its children. */

	public void dump(String prefix) {
		System.out.println(toString(prefix) + " " + name);
		if (children != null) {
			for (int i = 0; i < children.length; ++i) {
				SimpleNode n = (SimpleNode) children[i];
				if (n != null) {
					n.dump(prefix + " ");
				}
			}
		}
	}

	public Parameter getExpression() {
		// Just execute first child. More comples Nodes have to override this anyways.
		return null;
	}

    public void setDocString(String docString) {
    	this.docString = docString;
        }

        public String getDocString() {
    	return docString;
       }
	
	public String getExpressionString() {

		return null;
	};
}
