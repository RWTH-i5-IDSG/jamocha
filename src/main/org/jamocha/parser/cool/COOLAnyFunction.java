/* Generated By:JJTree: Do not edit this line. CLIPS_SLFunctionCall.java */
/** AST Node representing a Function Call.
	@author jjTree
	@author Ory Chowaw-Liebman
*/
package org.jamocha.parser.cool;

import org.jamocha.parser.*;
import org.jamocha.rete.*;

public class COOLAnyFunction extends SimpleNode {

	public COOLAnyFunction(int id) {
		super(id);
	}

	public COOLAnyFunction(COOLParser p, int id) {
		super(p, id);
	}
	
	public String toString() {
		return "Function \"" + name + "\"";
	}

	public JamochaValue getValue(Rete engine) throws EvaluationException {
		JamochaValue ret=null;
		Parameter params[] = new Parameter[jjtGetNumChildren()];
		for(int i=0; i<jjtGetNumChildren(); i++){
		    params[i]= (Parameter)jjtGetChild(i);
		}
		Function func=engine.findFunction(name);
		// Return false if function not found (CLIPS does not throw exceptions here)
		if (func==null)
		{
			//System.out.println("No Function");
			return JamochaValue.FALSE;
		}

		ret=func.executeFunction(engine,params);
		return ret;
	}
}
