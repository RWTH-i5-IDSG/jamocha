/* Generated By:JJTree: Do not edit this line. CLIPS_SLFunctionCall.java */
/** AST Node representing a Function Call.
	@author jjTree
	@author Ory Chowaw-Liebman
*/
package org.jamocha.parser.cool;

import org.jamocha.parser.*;
import org.jamocha.rete.*;

public class COOLAnyFunction extends SimpleNode {

	public COOLAnyFunction(int id) {
		super(id);
	}

	public COOLAnyFunction(COOLParser p, int id) {
		super(p, id);
	}
	
	public String toString() {
		return "Function \"" + name + "\"";
	}

	public JamochaValue execute() throws EvaluationException {
		int i;
		JamochaValue ret=null;
		ValueParam params[] = new ValueParam[jjtGetNumChildren()];
		Function func=parser.getFunction(name);
		// Return false if function not found (CLIPS does not throw exceptions here)
		if (func==null)
		{
			//System.out.println("No Function");
			return JamochaValue.FALSE;
		}

		for (i=0;i<jjtGetNumChildren();i++)
		{
			//ret=jjtGetChild(i).execute();
			params[i]=new ValueParam(jjtGetChild(i).execute());
		}
		ret=func.executeFunction(parser.getRete(),params);
		return ret;
	}
}
