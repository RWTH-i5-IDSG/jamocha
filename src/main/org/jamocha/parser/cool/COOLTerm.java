/* Generated By:JJTree: Do not edit this line. COOLTerm.java */
package org.jamocha.parser.cool;

import org.jamocha.parser.JamochaType;
import org.jamocha.parser.JamochaValue;

public class COOLTerm extends SimpleNode {
	public final static int T_UNDEF = 0;
	public final static int T_CONST = 1;
	public final static int T_SINGLE = 2;
	public final static int T_MULTI = 3;
	public final static int T_COLON = 4;
	public final static int T_EQ = 5;

	protected int type;
	protected boolean negate=false;

	public COOLTerm(int id) {
		super(id);
	}
	
	public COOLTerm(COOLParser p, int id) {
		super(p, id);
	}

	public void setNegate(boolean neg)
	{ negate=neg; };
	
	public boolean getNegate()
	{ return negate; };

	public String toString()
	{
		return COOLTreeConstants.jjtNodeName[id];
	};
	
	public void dump(String prefix) {
		if (children != null) {
			if (negate) System.out.print(name+"~"+children[0].getName());
			else System.out.print(name+children[0].getName());
		}
	};

	public void setType(int t)
	{
		switch(t)
		{
		case T_CONST: 
			name="";
			type=t;
			break;
		case T_SINGLE: 
			name="";
			type=t;
			break;
		case T_MULTI: 
			name="";
			type=t;
			break;
		case T_COLON: 
			name=":";
			type=t;
			break;
		case T_EQ: 
			name="=";
			type=t;
			break;
		default: 
			name="undef";
			type=T_UNDEF;
			break;
		}
	}
}
