/* Generated By:JJTree: Do not edit this line. COOLAssertFunc.java */
package org.jamocha.parser.cool;

import org.jamocha.parser.*;
import org.jamocha.rete.*;
import org.jamocha.rule.*;

public class COOLAssertFunc extends SimpleNode {
	public COOLAssertFunc(int id) {
		super(id);
	}

	public COOLAssertFunc(COOLParser p, int id) {
		super(p, id);
	}

	public JamochaValue getValue(Rete engine) throws EvaluationException
	{
		int i;
		JamochaValue ret=JamochaValue.FALSE;
		Fact fact=null;
		// Children will create appropriate pattern fact (ordered or template)
		for (i=0;i<jjtGetNumChildren();i++)	
		{
			ret=jjtGetChild(i).getValue(engine); 	// Return only data for last fact, acording to CLIPS BPG
			if (ret.is(JamochaType.FACT)) fact=ret.getFactValue();
			else continue;
			engine.assertFact((Deffact)fact);
			
		}
		if (fact.getFactId() > 0) return JamochaValue.newFactId(fact.getFactId());
		else return JamochaValue.FALSE;		
	};
}
