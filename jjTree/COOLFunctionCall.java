/* Generated By:JJTree: Do not edit this line. CLIPS_SLFunctionCall.java */
/** AST Node representing a Function Call.
	@author jjTree
	@author Ory Chowaw-Liebman
*/

import org.jamocha.parser.*;
import org.jamocha.rete.*;

public class COOLFunctionCall extends SimpleNode {

	public COOLFunctionCall(int id) {
		super(id);
	}

	public COOLFunctionCall(COOL p, int id) {
		super(p, id);
	}
	
	public String toString() {
		return "Function \"" + name + "\"";
	}

	public JamochaValue execute() throws EvaluationException {
		int i;
		JamochaValue ret;
		COOLParameter params[]=new COOLParameter[jjtGetNumChildren()];
		Function func=parser.getFunction(name);
		// Throw exception if func==null
		if (func==null)
		{
			System.out.println("No Function");
		}
		// Translate Parameters to
		if (parser ==null) System.out.println("No Parser");

		for (i=0;i<jjtGetNumChildren();i++)
			params[i].setValue(jjtGetChild(i).execute());
		ret=func.executeFunction(parser.getRete(),params);
		return ret;
	}
}
