/* Generated By:JJTree: Do not edit this line. COOLBooleanSymbol.java */

public class COOLBooleanSymbol extends SimpleNode {
	protected boolean value;
	
	public COOLBooleanSymbol(int id) {
		super(id);
		value=false;
	}
	
	public COOLBooleanSymbol(COOL p, int id) {
		super(p, id);
		value=false;
	}

	public void setToTrue() 
	{ value=true; }

	public void setToFalse() 
	{ value=false; }

	// Gets speacial treatment because lexer accepts multiple representation of boolean values
	public boolean compareTree(SimpleNode n)
	{
		int i;
		// Do both nodes have the same id?
		if (id!=n.getId()) return false;
		// Do both nodes represent the same boolean?
		if (n.execute().toBool()!=value) return false;
		// Yes, they do
		return true;
	}
	
	public CLIPSData execute()
	{
		return new CLIPSBool(value);
	}
}
